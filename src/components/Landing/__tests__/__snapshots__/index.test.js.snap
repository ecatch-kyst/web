// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Landing component renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "i18n": Object {
        "changeLanguage": Object {
          "addMatchers": [Function],
          "advanceTimersByTime": [Function],
          "autoMockOff": [Function],
          "autoMockOn": [Function],
          "clearAllMocks": [Function],
          "clearAllTimers": [Function],
          "deepUnmock": [Function],
          "disableAutomock": [Function],
          "doMock": [Function],
          "dontMock": [Function],
          "enableAutomock": [Function],
          "fn": [Function],
          "genMockFromModule": [Function],
          "isMockFunction": [Function],
          "mock": [Function],
          "requireActual": [Function],
          "requireMock": [Function],
          "resetAllMocks": [Function],
          "resetModuleRegistry": [Function],
          "resetModules": [Function],
          "restoreAllMocks": [Function],
          "retryTimes": [Function],
          "runAllImmediates": [Function],
          "runAllTicks": [Function],
          "runAllTimers": [Function],
          "runOnlyPendingTimers": [Function],
          "runTimersToTime": [Function],
          "setMock": [Function],
          "setTimeout": [Function],
          "spyOn": [Function],
          "unmock": [Function],
          "useFakeTimers": [Function],
          "useRealTimers": [Function],
        },
        "language": "en",
      },
      "t": [Function],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "i18n": Object {
          "changeLanguage": Object {
            "addMatchers": [Function],
            "advanceTimersByTime": [Function],
            "autoMockOff": [Function],
            "autoMockOn": [Function],
            "clearAllMocks": [Function],
            "clearAllTimers": [Function],
            "deepUnmock": [Function],
            "disableAutomock": [Function],
            "doMock": [Function],
            "dontMock": [Function],
            "enableAutomock": [Function],
            "fn": [Function],
            "genMockFromModule": [Function],
            "isMockFunction": [Function],
            "mock": [Function],
            "requireActual": [Function],
            "requireMock": [Function],
            "resetAllMocks": [Function],
            "resetModuleRegistry": [Function],
            "resetModules": [Function],
            "restoreAllMocks": [Function],
            "retryTimes": [Function],
            "runAllImmediates": [Function],
            "runAllTicks": [Function],
            "runAllTimers": [Function],
            "runOnlyPendingTimers": [Function],
            "runTimersToTime": [Function],
            "setMock": [Function],
            "setTimeout": [Function],
            "spyOn": [Function],
            "unmock": [Function],
            "useFakeTimers": [Function],
            "useRealTimers": [Function],
          },
          "language": "en",
        },
        "t": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
